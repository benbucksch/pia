{
  "language": "Language for speech input and output. 2-letter ISO language code.",
  "mpd": {
    "server": "Hostname of the MPD server on your local network",
    "port": "Port number of the MPD server on your local network"
  },
  "calendar": {
    "serverURL": "The CalDAV URL. For NextCloud/ownCloud, log in with a browser, go to the [Calendar] app, [Settings] at the bottom left, and copy the [Copy the primary CalDAV URL]",
    "username": "Your username on the CalDAV/NextCloud/ownCloud server",
    "password": "Your password"
  },
  "hue": {
    "hostname": "The IP address or hostname of your Hue Bridge on your local network",
    "auth": "The authentication credential to your Hue Bridge. This is effectively a password."
  },
  "homeLocation": {
    "city": "The city where this device is. Needed for weather, navigation, restaurant recommendations etc.",
    "lat": "The GPS latitude coordinate where this device is",
    "lon": "The GPS longitude coordinate where this device is"
  },
  "audio": {
    "maxCommandLength": "Finish the voice command after N seconds, e.g. when there is too much noise.",
    "inputDevice": "ALSA ID of the microphone audio device, e.g. hw:2,1 , for 1. card 2. device. See aplay -l for a list. Empty = default device.",
    "outputDevice": "ALSA ID of the speaker audio device, e.g. hw:1,0 . Empty = default device."
  },
  "speechEngine": {
    "tts": "Text to speech engine to use. Options: mary and mozilla",
    "wake": "The wake word engine to use. Options: bumblee"
  },
  "deepSpeech": {
    "modelDir": "DeepSpeech Model directory. Convenience parameter to specify model, lm and trie at the same time.",
    "model": "DeepSpeech model -- .pbmm or .tflit. Contains the phonemes. If not passed, path inferred from modelDir.",
    "scorer": "DeepSpeech .scorer file. Contains the language model. If not passed, path inferred from modelDir."
  },
  "maryTTS": {
    "url": "URL of the MaryTTS server, usually running locally",
    "voice": "The MaryTTS voice name, e.g. cmu-rms, dfki-spike, dfki-prudence or cmu-slt-hsmm. Download them by running  ./gradlew runInstallerGui  in the marytts directory."
  }
}
